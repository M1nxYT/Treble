{"version":3,"file":"bot.js","sourceRoot":"","sources":["../src/bot.ts"],"names":[],"mappings":"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","sourcesContent":["import Discord, { Interaction, GuildMember, Snowflake, MessageActionRow, MessageEmbed, MessageSelectMenu, TextChannel, Intents, ColorResolvable } from 'discord.js';\nimport { AudioPlayerStatus, AudioResource, entersState, joinVoiceChannel, VoiceConnectionStatus } from '@discordjs/voice';\nimport { Track } from './classes/track';\nimport { MusicSubscription } from './classes/subscription';\nimport ytdl from 'ytdl-core';\nconst yts = require('yt-search');\nimport * as dotenv from 'dotenv';\nimport * as fs from 'fs';\nimport mongoose from 'mongoose';\nimport * as models from './classes/models';\nimport express from 'express';\nimport path from 'path';\ndotenv.config();\n\nexport class customClient extends Discord.Client {\n\tspotifyCredentials: any;\n\tsubscriptions!: Map<any, any>;\n\tcommands: any;\n\tsecondsToHms: any;\n\trgbToHex: any;\n\tdb!: mongoose.Connection;\n\tmodels!: typeof models;\n\tapp!: any;\n}\n\nconst client = new customClient({\n\tintents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES, Intents.FLAGS.GUILD_VOICE_STATES],\n\tallowedMentions: { parse: ['users'] }\n});\n\nclient.db = mongoose.connection;\nif (process.env['MONGODB']) {\n\tmongoose.connect(process.env['MONGODB']);\n}\n\nclient.app = express();\n\nclient.db.on('error', console.error.bind(console, 'connection error:'));\nclient.models = models;\n\n\nimport { events } from './events/events';\nfor (const event of events) {\n\tif (event.once) {\n\t\tclient.once(event.name, (...args) => event.execute([...args], client));\n\t} else {\n\t\tclient.on(event.name, (...args) => event.execute([...args], client));\n\t}\n}\n\nimport { commands } from './commands/commands';\nclient.commands = new Discord.Collection();\nfor (const command of commands) {\n\tclient.commands.set(command.name, command);\n};\n\nclient.subscriptions = new Map<Snowflake, MusicSubscription>();\nclient.spotifyCredentials = { id: process.env.SPOTIFY_ID, secret: process.env.SPOTIFY_SECRET }\n\n\nclient.secondsToHms = function (d: number) {\n\td = Number(d);\n\tvar h = Math.floor(d / 3600);\n\tvar m = Math.floor(d % 3600 / 60);\n\tvar s = Math.floor(d % 3600 % 60);\n\n\tvar hDisplay = h > 0 ? h + (h == 1 ? \" hour, \" : \" hours, \") : \"\";\n\tvar mDisplay = m > 0 ? m + (m == 1 ? \" minute, \" : \" minutes, \") : \"\";\n\tvar sDisplay = s > 0 ? s + (s == 1 ? \" second\" : \" seconds\") : \"\";\n\treturn hDisplay + mDisplay + sDisplay;\n}\nfunction componentToHex(c: number) {\n\tvar hex = c.toString(16);\n\treturn hex.length == 1 ? \"0\" + hex : hex;\n}\n\nclient.rgbToHex = (r: number, g: number, b: number) => {\n\tlet dominentColor = \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\tlet embedColor = parseInt(dominentColor.replace('#', '0x'))\n\treturn embedColor\n}\n\nclient.on('interactionCreate', async interaction => {\n\tif (!interaction.isSelectMenu() || !interaction.guildId) return;\n\tlet subscription = client.subscriptions.get(interaction.guildId);\n\n\tclient.user?.setActivity(`music in ${client.subscriptions.size} servers`, { type: \"LISTENING\", });\n\n\t// Remove the components from the message\n\tinteraction.update({\n\t\tcontent: \"Song will now be queued\",\n\t\tcomponents: []\n\t})\n\n\tlet url = interaction.values[0];\n\n\n\tif (!ytdl.validateURL(url)) {\n\t\tawait interaction.followUp('Could not add that song to the queue');\n\t\treturn;\n\t}\n\t// If a connection to the guild doesn't already exist and the user is in a voice channel, join that channel\n\t// and create a subscription.\n\tif (!subscription) {\n\t\tif (interaction.member instanceof GuildMember && interaction.member.voice.channel) {\n\t\t\tconst channel = interaction.member.voice.channel;\n\t\t\tsubscription = new MusicSubscription(\n\t\t\t\tjoinVoiceChannel({\n\t\t\t\t\tchannelId: channel.id,\n\t\t\t\t\tguildId: channel.guild.id,\n\t\t\t\t\tadapterCreator: channel.guild.voiceAdapterCreator, // no idea what the fuck this is\n\t\t\t\t}),\n\t\t\t);\n\t\t\tsubscription.voiceConnection.on('error', console.warn);\n\t\t\tclient.subscriptions.set(interaction.guildId, subscription);\n\t\t\tclient.user?.setActivity(`music in ${client.subscriptions.size} servers`, { type: \"LISTENING\", });\n\t\t}\n\t}\n\n\t// If there is no subscription, tell the user they need to join a channel.\n\tif (!subscription) {\n\t\tawait interaction.followUp('Join a voice channel and then try that again!');\n\t\treturn;\n\t}\n\n\t// Make sure the connection is ready before processing the user's request\n\ttry {\n\t\tawait entersState(subscription.voiceConnection, VoiceConnectionStatus.Ready, 20e3); // what the fuck is 20e3\n\t} catch (error) {\n\t\tconsole.warn(error);\n\t\tawait interaction.followUp('Failed to join voice channel within 20 seconds, please try again later!');\n\t\treturn;\n\t}\n\n\ttry {\n\t\t// Attempt to create a Track from the user's video URL\n\t\tconst track = await Track.from(url, interaction, client);\n\t\t// Enqueue the track and reply a success message to the user\n\t\tsubscription.enqueue(track);\n\t\tawait interaction.followUp(`Enqueued **${track.title}**`);\n\t\tconsole.log(`${track.title} Added to queue`)\n\t} catch (error) {\n\t\tconsole.warn(error);\n\t\tawait interaction.reply('Failed to play track, please try again later!');\n\t}\n\n});\n\nclient.on('error', console.warn);\n\nvoid client.login(process.env.TOKEN);"]}