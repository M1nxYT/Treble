{"version":3,"file":"loop.js","sourceRoot":"","sources":["../../src/commands/loop.ts"],"names":[],"mappings":";;;AAEA,4CAAyC;AACzC,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,gBAAgB,EAAE,YAAY,EAAE,iBAAiB,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa;AACpJ,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,mBAAmB;AACtK,MAAM,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,mCAAmC;AAExF,QAAA,IAAI,GAAG;IACd,IAAI,EAAE,MAAM;IACZ,WAAW,EAAE,qCAAqC;IAClD,IAAI,EAAE,IAAI,mBAAmB,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,qCAAqC,CAAC;IACrG,SAAS,EAAE,KAAK;IAEhB,KAAK,CAAC,OAAO,CAAC,WAAgB,EAAE,MAAoB;;QAChD,IAAI,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEjE,IAAG,CAAC,YAAY,EAAC;YAAE,OAAO,MAAM,WAAW,CAAC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;SAAE;QAEtF,IAAI,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,KAAK,iBAAiB,CAAC,OAAO,EAAE;YAErE,IAAI,GAAG,GAAG,CAAA,MAAA,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,0CAAE,QAAQ,CAAC,GAAG,KAAI,SAAS,CAAA;YAE9E,IAAG,GAAG,IAAI,SAAS,EAAC;gBAAC,OAAO,MAAM,WAAW,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAA;aAAC;YAEjF,IAAI,YAAY,CAAC,QAAQ,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBAChD,IAAI,IAAI,GAAG,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAA;gBACjE,IAAI,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAA;gBAExC,IAAG,IAAI,KAAK,QAAQ,EAAC;oBACjB,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;iBAC9B;gBACD,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAA;gBAC7B,MAAM,WAAW,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;aAC/E;iBACI;gBACD,MAAM,KAAK,GAAG,MAAM,aAAK,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;gBACzD,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAC5B,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAA;gBAC5B,MAAM,WAAW,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;aAC9E;SAEJ;aAAM;YACH,MAAM,WAAW,CAAC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;SAC7D;IACL,CAAC;CACJ,CAAA","sourcesContent":["import { customClient } from \"../bot\";\nimport { MusicSubscription } from \"../classes/subscription\";\nimport { Track } from '../classes/track';\nconst { Interaction, GuildMember, Snowflake, MessageActionRow, MessageEmbed, MessageSelectMenu, TextChannel } = require('discord.js'); // discord js\nconst { AudioResource, entersState, joinVoiceChannel, VoiceConnectionStatus, createAudioPlayer, AudioPlayerStatus } = require('@discordjs/voice'); // discord js voice\nconst { SlashCommandBuilder } = require('@discordjs/builders'); // discord js slash command builder\n\nexport let loop = {\n    name: 'loop',\n    description: 'Repeats the currently playing song!',\n    data: new SlashCommandBuilder().setName('loop').setDescription('Repeats the currently playing song!'),\n    ephemeral: false,\n    \n    async execute(interaction: any, client: customClient) {\n        let subscription = client.subscriptions.get(interaction.guildId);\n\n        if(!subscription){ return await interaction.followUp('Not playing in this server!'); }\n\n        if (subscription.audioPlayer.state.status === AudioPlayerStatus.Playing) {\n\n            let url = (subscription.audioPlayer.state.resource)?.metadata.url || undefined\n\n            if(url == undefined){return await interaction.followUp('An error has occurred!')}\n\n            if (subscription.isLooped && subscription.queue[0]) {\n                let song = (subscription.audioPlayer.state.resource).metadata.url\n                let nextsong = subscription.queue[0].url\n\n                if(song === nextsong){\n                    subscription.queue.shift();\n                }\n                subscription.isLooped = false\n                await interaction.followUp({ content: `Loop Disabled!`, ephemeral: false });\n            }\n            else {\n                const track = await Track.from(url, interaction, client);\n                subscription.enqueue(track);\n                subscription.isLooped = true\n                await interaction.followUp({ content: `Loop Enabled!`, ephemeral: false });\n            }\n\n        } else {\n            await interaction.followUp('Not playing in this server!');\n        }\n    }\n}"]}