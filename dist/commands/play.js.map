{"version":3,"file":"play.js","sourceRoot":"","sources":["../../src/commands/play.ts"],"names":[],"mappings":"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","sourcesContent":["import { customClient } from \"../bot\";\nconst { Interaction, GuildMember, Snowflake, MessageActionRow, MessageEmbed, MessageSelectMenu, TextChannel } = require('discord.js'); // discord js\nconst { AudioResource, entersState, joinVoiceChannel, VoiceConnectionStatus, createAudioPlayer, AudioPlayerStatus } = require('@discordjs/voice'); // discord js voice\nconst { SlashCommandBuilder } = require('@discordjs/builders'); // discord js slash command builder\nconst { getColorFromURL } = require('color-thief-node'); // get color from image url\nconst Spotify = require('node-spotify-api') // spotify search\nconst yts = require('yt-search') // youtube search\nconst ytdl = require('ytdl-core'); // fetches audio info\nconst { MusicSubscription } = require('../classes/subscription.js'); // music subs\nimport { Track } from '../classes/track';\n\nexport let play = {\n    name: 'play',\n    description: 'Play a Song!',\n    data: new SlashCommandBuilder().setName('play').setDescription('Play a Song!').addStringOption((option: any) => option.setName('song').setDescription('Url or Song Name').setRequired(true)),\n    ephemeral: true,\n    \n    async execute(interaction: any, client: customClient) {\n\n        const spotify = new Spotify(client.spotifyCredentials)\n        const url = interaction.options.get('song').value.replace('https://open', 'https://api').replace('/track', '/v1/tracks').replace('/playlist', '/v1/playlists').replace('/album', '/v1/albums')\n        let subscription = client.subscriptions.get(interaction.guildId);\n\n        if (!subscription) {\n            if (interaction.member.voice.channel) {\n                const channel = interaction.member.voice.channel; // get voice channel\n                subscription = new MusicSubscription(\n                    joinVoiceChannel({\n                        channelId: channel.id,\n                        guildId: channel.guild.id,\n                        adapterCreator: channel.guild.voiceAdapterCreator, // no idea what the fuck this is\n                    }),\n                );\n                subscription.voiceConnection.on('error', console.warn);\n                client.subscriptions.set(interaction.guildId, subscription);\n                client.user?.setActivity(`music in ${client.subscriptions.size} servers`, { type: \"LISTENING\", });\n\n                subscription.timeout = setTimeout(function () {\n                    if (subscription.queue.length == 0 && subscription.audioPlayer.state.status != AudioPlayerStatus.Playing) {\n                        try {\n                            subscription.voiceConnection.destroy();\n                            client.subscriptions.delete(interaction.guildId);\n                            interaction.followUp('Left voice channel due to lack of music playing!')\n                        } catch (err) { }\n                        client.user?.setActivity(`music in ${client.subscriptions.size} servers`, { type: \"LISTENING\", });\n                    }\n                }, 20000);\n            }\n        }\n        if (!subscription) {\n            return await interaction.followUp('Join a voice channel and then try that again!');\n        }\n\n        try {\n            await entersState(subscription.voiceConnection, VoiceConnectionStatus.Ready, 20e3); // what the fuck is 20e3\n        } catch (error) {\n            console.warn(error);\n            await interaction.followUp('Failed to join voice channel within 20 seconds, please try again later!');\n            return;\n        }\n\n        if (url.includes('radio')) { // if youtube radio link\n            return await interaction.followUp('Youtube Radio mixes are not supported!');\n        } else if (url.includes('spotify') && url.includes('show')) { // if youtube radio link\n            return await interaction.followUp('Spotify Podcats are not supported yet!');\n        } else if (ytdl.validateURL(url) && url.includes('list')) { // if youtube playlist\n            const list = await yts({ listId: url.split('&list=')[1] })\n            let videos = list.videos.slice(0, 20)\n            for (let video in videos) {\n                try {\n                    const track = await Track.from(`https://www.youtube.com/watch?v=${list.videos[video].videoId}`, interaction, client);\n                    subscription.enqueue(track);\n                } catch (err) { }\n            }\n        } else if (url.includes('spotify') && url.includes('list')) { // if spotify playlist\n            let playlist = await spotify.request(url.split('?')[0])\n            try {\n                const playlistEmbed = new MessageEmbed()\n                    .setTitle(playlist.name || \"Not Found!\")\n                    .setURL(playlist.external_urls.spotify || \"Not Found!\")\n                    .setAuthor(`${playlist.owner.display_name}`)\n                    .setDescription(playlist.description)\n                    .setThumbnail(playlist.images[0].url || 'https://i.imgur.com/BUztXex.png')\n                    .setTimestamp()\n                    .setFooter('Spotify', 'https://cdn.exerra.xyz/files/png/companies/spotify/240px-Spotify_logo_without_text.png');\n\n                try {\n                    let extractColor = await getColorFromURL(playlist.images[0].url || 'https://i.imgur.com/BUztXex.png');\n                    playlistEmbed.setColor(client.rgbToHex(extractColor[0], extractColor[1], extractColor[2]));\n                } catch (err) {\n                    console.log(err)\n                    playlistEmbed.setColor('#ffffff');\n                }\n\n                interaction.followUp({ embeds: [playlistEmbed] });\n            } catch (err) { console.log(err) }\n            if (playlist.tracks) {\n                let songs = playlist.tracks.items.slice(0, 20)\n                for (let song in songs) {\n                    let spotifyInfo = songs[song].track\n\n                    let artists = '';\n\n                    if (spotifyInfo.album.artists.length != 1) {\n                        var a: any[] = [];\n                        for (let i in spotifyInfo.album.artists) {\n                            a[parseInt(i)] = spotifyInfo.album.artists[parseInt(i)].name;\n                        }\n                        artists = a.join(', ')\n                    } else { artists = spotifyInfo.album.artists[0].name; }\n\n                    const url = await (await yts(`${spotifyInfo.name} - ${artists} `)).videos[0].url\n                    const track = await Track.from(url, interaction, client);\n                    subscription.enqueue(track);\n                }\n\n            } else {\n                try { return interaction.followUp({ content: 'Content not queued, please try again later!', ephemeral: true }); } catch (err) { }\n            }\n\n\n\n        } else if (url.includes('spotify') && url.includes('album')) { // if spotify album\n            try {\n                let album = await spotify.request(url.split('?')[0])\n\n                const albumEmbed = new MessageEmbed()\n                    //.setColor(dominentColor)\n                    .setTitle(album.name || \"Not Found!\")\n                    .setURL(album.external_urls.spotify || \"Not Found!\")\n                    .setAuthor(`${album.artists[0].name} - ${album.release_date}`)\n                    .setThumbnail(album.images[0].url || 'https://i.imgur.com/BUztXex.png')\n                    .setTimestamp()\n                    .setFooter('Spotify', 'https://cdn.exerra.xyz/files/png/companies/spotify/240px-Spotify_logo_without_text.png');\n\n                try {\n                    let extractColor = await getColorFromURL(album.images[0].url || 'https://i.imgur.com/BUztXex.png');\n                    albumEmbed.setColor(client.rgbToHex(extractColor[0], extractColor[1], extractColor[2]));\n                } catch (err) {\n                    console.log(err)\n                    albumEmbed.setColor('#ffffff');\n                }\n\n                interaction.followUp({ embeds: [albumEmbed] });\n\n                if (album.tracks) {\n                    let songs = album.tracks.items.slice(0, 20)\n                    for (let song in songs) {\n                        let spotifyInfo = await songs[song]\n\n                        let artists = '';\n\n                        if (spotifyInfo.artists.length != 1) {\n                            var a = [];\n                            for (let i in spotifyInfo.artists) {\n                                a[parseInt(i)] = spotifyInfo.artists[parseInt(i)].name;\n                            }\n                            artists = a.join(', ')\n                        } else { artists = spotifyInfo.artists[0].name; }\n\n                        const url = await (await yts(`${spotifyInfo.name} - ${artists} `)).videos[0].url\n\n                        const track = await Track.from(url, interaction, client);\n                        subscription.enqueue(track);\n                    }\n\n                } else {\n                    try { return interaction.followUp({ content: 'Content not queued, please try again later!', ephemeral: true }); } catch (err) { }\n                }\n            } catch (err) { console.log(err) }\n\n        } else if (ytdl.validateURL(url) && url.includes('watch')) { // check if youtube song link\n            try {\n                const track = await Track.from(url, interaction, client);\n                subscription.enqueue(track);\n            } catch (err) {\n                console.log(err)\n                return interaction.followUp({ content: 'Content not queued, please try again later!', ephemeral: true });\n            }\n\n            await interaction.followUp({ content: 'Queued!', ephemeral: true });\n\n        } else if (url.includes('spotify') && url.includes('tracks')) { // check if spotify song link\n\n            const spotifyInfo = await spotify.request(url.split('?')[0])\n            let artists = '';\n\n            if (spotifyInfo.album.artists.length != 1) {\n                var a = [];\n                for (let i in spotifyInfo.album.artists) {\n                    a[parseInt(i)] = spotifyInfo.album.artists[parseInt(i)].name;\n                }\n                artists = a.join(', ')\n            } else { artists = spotifyInfo.album.artists[0].name; }\n\n\n            const r = await yts(`${spotifyInfo.name} - ${artists} `)\n            const videos = r.videos.slice(0, 5)\n            let results = new Array;\n\n\n            await videos.forEach((video: any) => { // type declarations silly champ\n                results.push({\n                    label: video.title,\n                    description: ` - ${video.author.name}`,\n                    value: video.url\n                })\n            });\n\n            if (videos.length == 0) {\n                await interaction.followUp({ content: 'Queued:', ephemeral: false });\n                return\n            }\n\n            const response = new MessageActionRow().addComponents(\n                new MessageSelectMenu()\n                    .setCustomId('search')\n                    .setPlaceholder('No song selected')\n                    .addOptions(results),\n            );\n\n            await interaction.followUp({ content: 'Results From Spotify Link!', components: [response], ephemeral: false });\n\n        } else { // If not any of the above just youtube search it\n            const r = await yts(url)\n            const videos = r.videos.slice(0, 5)\n\n            let results = new Array;\n\n            await videos.forEach((video: any) => { // type declarations silly champ\n                results.push({\n                    label: video.title,\n                    description: ` - ${video.author.name}`,\n                    value: video.url\n                })\n            });\n\n            if (videos.length == 0) {\n                await interaction.followUp({ content: 'No Results Found!', ephemeral: false });\n                return\n            }\n\n            const response = new MessageActionRow().addComponents(\n                new MessageSelectMenu()\n                    .setCustomId('search')\n                    .setPlaceholder('No song selected')\n                    .addOptions(results),\n            );\n\n            await interaction.followUp({ content: 'Results From Youtube Search!', components: [response], ephemeral: true });\n        }\n    }\n}"]}