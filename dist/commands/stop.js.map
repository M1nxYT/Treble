{"version":3,"file":"stop.js","sourceRoot":"","sources":["../../src/commands/stop.ts"],"names":[],"mappings":";;;AACA,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,gBAAgB,EAAE,YAAY,EAAE,iBAAiB,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa;AACpJ,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,mBAAmB;AACtK,MAAM,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,mCAAmC;AAExF,QAAA,IAAI,GAAG;IACd,IAAI,EAAE,MAAM;IACZ,WAAW,EAAE,gBAAgB;IAC7B,IAAI,EAAE,IAAI,mBAAmB,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,gBAAgB,CAAC;IAChF,SAAS,EAAE,KAAK;IAEhB,KAAK,CAAC,OAAO,CAAC,WAAgB,EAAE,MAAoB;;QAChD,IAAI,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACjE,IAAI,YAAY,IAAI,YAAY,CAAC,eAAe,EAAE;YAC9C,IAAI;gBACA,YAAY,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;gBACvC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aACpD;YAAC,OAAO,GAAG,EAAE,GAAE;YAChB,MAAA,MAAM,CAAC,IAAI,0CAAE,WAAW,CAAC,YAAY,MAAM,CAAC,aAAa,CAAC,IAAI,UAAU,EAAE,EAAE,IAAI,EAAE,WAAW,GAAG,CAAC,CAAC;YAClG,MAAM,WAAW,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;SAClF;aAAM;YACH,MAAM,WAAW,CAAC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;SAC7D;IACL,CAAC;CACJ,CAAA","sourcesContent":["import { customClient } from \"../bot\";\nconst { Interaction, GuildMember, Snowflake, MessageActionRow, MessageEmbed, MessageSelectMenu, TextChannel } = require('discord.js'); // discord js\nconst { AudioResource, entersState, joinVoiceChannel, VoiceConnectionStatus, createAudioPlayer, AudioPlayerStatus } = require('@discordjs/voice'); // discord js voice\nconst { SlashCommandBuilder } = require('@discordjs/builders'); // discord js slash command builder\n\nexport let stop = {\n    name: 'stop',\n    description: 'Stop playback!',\n    data: new SlashCommandBuilder().setName('stop').setDescription('Stop playback!'),\n    ephemeral: false,\n    \n    async execute(interaction: any, client: customClient) {\n        let subscription = client.subscriptions.get(interaction.guildId);\n        if (subscription && subscription.voiceConnection) {\n            try {\n                subscription.voiceConnection.destroy();\n                client.subscriptions.delete(interaction.guildId);\n            } catch (err) {}\n            client.user?.setActivity(`music in ${client.subscriptions.size} servers`, { type: \"LISTENING\", });\n            await interaction.followUp({ content: `Stopped Playback!`, ephemeral: false });\n        } else {\n            await interaction.followUp('Not playing in this server!');\n        }\n    }\n}"]}